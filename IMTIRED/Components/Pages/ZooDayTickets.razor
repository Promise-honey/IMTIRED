@using IMTIRED.Utilities
@using IMTIRED.Services
@using IMTIRED.Models
@inject UserSession UserSession
@inject RoomService RoomService
@inject RoombookingService RoombookingService
@inject CustomerService CustomerService
@inject NavigationManager NavigationManager
@inject TicketbookingService TicketbookingService
@page "/zoo-tickets"


<style>
    .booking-page {
        font-family: 'Arial', sans-serif;
        background-color: #F5F5F5;
        padding: 2rem;
        margin-top: 3rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .header {
        text-align: center;
        margin-bottom: 2rem;
    }

        .header h1 {
            font-size: 2.5rem;
            color: #5B7553;
        }

        .header p {
            color: #777;
            font-size: 1.1rem;
        }

    .book-options {
        padding: 2rem;
        text-align: center;
        margin-top: 4rem;
    }

    .options-container {
        display: flex;
        justify-content: center;
        gap: 1.5rem;
        flex-wrap: wrap;
    }

    .option {
        background-color: #5B7553;
        color: white;
        padding: 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
        width: 300px;
        margin-top: 1rem;
    }

        .option h2 {
            margin-bottom: 0.5rem;
        }

        .option p {
            margin-bottom: 1rem;
        }

    .button {
        text-decoration: none;
        padding: 0.75rem 1.5rem;
        background-color: #D4A017;
        color: white;
        border-radius: 0.5rem;
        transition: background-color 0.3s ease;
    }

        .button:hover {
            background-color: #B78913;
        }

    .booking-form {
        max-width: 600px;
        margin: 0 auto;
        background-color: white;
        padding: 2rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .form-field {
        margin-bottom: 1.5rem;
    }

        .form-field label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
        }

        .form-field input,
        .form-field select {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            border-radius: 0.25rem;
            border: 1px solid #ddd;
        }

            .form-field input[type="submit"] {
                background-color: #5B7553;
                color: white;
                border: none;
                cursor: pointer;
            }

                .form-field input[type="submit"]:hover {
                    background-color: #4B653F;
                }
</style>

<div class="booking-page">
    <div class="header">
        <h1>Zoo Day Ticket Booking</h1>
        <p>Plan your visit to our Zoo and choose the best tickets for you and your family!</p>
    </div>

    <div class="book-options">
        <div class="options-container">
            <div class="option">
                <h2>Adult Ticket</h2>
                <p>General admission for adults (ages 16 and up)</p>
                <p><strong>Price: $20.00</strong></p>
                <a href="#book-now" class="button">Book Now</a>
            </div>

            <div class="option">
                <h2>Child Ticket</h2>
                <p>General admission for children (ages 3 - 15)</p>
                <p><strong>Price: $10.00</strong></p>
                <a href="#book-now" class="button">Book Now</a>
            </div>

            <div class="option">
                <h2>Family Pack</h2>
                <p>Special package for 2 adults and 2 children</p>
                <p><strong>Price: $50.00</strong></p>
                <a href="#book-now" class="button">Book Now</a>
            </div>
        </div>
    </div>

    <div id="book-now" class="booking-form">
        <h2>Book Your Tickets</h2>

        <div class="form-field">
            <label for="ticket-type">Ticket Type</label>
            <select id="ticket-type" name="ticket-type" @bind="selectedTicketType">
                <option value="adult">Adult Ticket</option>
                <option value="child">Child Ticket</option>
                <option value="family">Family Pack</option>
            </select>
        </div>

        <div class="form-field">
            <label for="number-of-tickets">Number of Tickets</label>
            <input type="number" id="number-of-tickets" name="number-of-tickets" min="1" @bind="numberOfTickets">
        </div>

        <div class="form-field">
            <label for="visit-date">Visit Date</label>
            <input type="date" id="visit-date" name="visit-date" @bind="visitDate">
        </div>

        <div class="form-field">
            <p><strong>Price: @totalPrice</strong></p>
        </div>

        <div class="form-field">
            <input type="submit" value="Book Tickets" @onclick="HandleBooking">
        </div>
    </div>
</div>

@inject TicketbookingService TicketbookingService
@inject NavigationManager NavigationManager

@code {
    private string selectedTicketType = "adult";
    private int numberOfTickets = 1;
    private DateTime visitDate = DateTime.Now;
    private string totalPrice = "$20.00"; // Default price for adult ticket

    // Prices for different ticket types
    private readonly Dictionary<string, decimal> ticketPrices = new Dictionary<string, decimal>
    {
        { "adult", 20.00m },
        { "child", 10.00m },
        { "family", 50.00m }
    };

    // Update the price dynamically when the ticket type or quantity changes
    private void UpdatePrice()
    {
        totalPrice = $"${(ticketPrices[selectedTicketType] * numberOfTickets):0.00}";
    }

    private async Task HandleBooking()
    {
        // Collect data from the form (e.g., ticket type, quantity, visit date)
        var ticketType = selectedTicketType; // Get from form or model
        var numberOfTickets = this.numberOfTickets; // Get from form or model
        var visitDate = this.visitDate; // Get from form or model

        var bookingRequest = new TicketBookingRequest
            {
                TicketType = ticketType,
                NumberOfTickets = numberOfTickets,
                VisitDate = visitDate
            };

        // Call the CreateBooking method in the service
        var result = await TicketbookingService.CreateBooking(bookingRequest);

        if (result)
        {
            // Successfully booked, navigate to confirmation page
            NavigationManager.NavigateTo("/confirmation");
        }
        else
        {
            // Handle booking failure, e.g., display an error message
        }
    }
}
