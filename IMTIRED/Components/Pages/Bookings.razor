@page "/book_ing"

@using IMTIRED.Models
@using IMTIRED.Services
@inject RoombookingService RoombookingService
@inject CustomerService CustomerService
@inject UserSession UserSession
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>My Bookings</h3>

@if (myBookings != null && myBookings.Count > 0)
{
    <div class="booking-list">
        <h4>Your Current Bookings:</h4>
        <ul>
            @foreach (var booking in myBookings)
            {
                <li class="booking-item">
                    <p><strong>Room @booking.Room.RoomNumber</strong>: @booking.StartDate to @booking.EndDate</p>
                    <button class="delete-button" @onclick="@(e => deleteBooking(booking))">Delete this Booking</button>
                </li>
            }
        </ul>
    </div>
}
else
{
    <p>You have no current bookings.</p>
}

<h3>Book a Room</h3>

<div class="booking-form">
    <div>
        <label>Room Number</label>
        <input type="number" @bind="roomNumber" min="1" />
    </div>

    <div>
        <label>Start Date</label>
        <input type="date" @bind="startDate" />
    </div>

    <div>
        <label>End Date</label>
        <input type="date" @bind="endDate" />
    </div>

    <button @onclick="BookRoom">Book Now</button>
</div>

@code {
    List<Roombooking> myBookings;
    private int roomNumber;
    private DateTime startDate = DateTime.Now;
    private DateTime endDate = DateTime.Now.AddDays(1);

    protected override async Task OnInitializedAsync()
    {
        if (UserSession.UserId == 0)
        {
            // Optionally redirect to the login page if not logged in
            // NavigationManager.NavigateTo("/log_in");
        }
        else
        {
            await LoadBookings();
        }
    }

    private async Task LoadBookings()
    {
        var customer = await CustomerService.GetCustomerFromIdAsync(UserSession.UserId); // Fetch customer
        if (customer != null)
        {
            myBookings = await RoombookingService.GetRoombookingsFromCustomer(customer); // Pass customer
        }
    }

    private async Task deleteBooking(Roombooking bookingToDelete)
    {
        await RoombookingService.DeleteBooking(bookingToDelete);
        await LoadBookings();
    }

    private async Task BookRoom()
    {
        var customer = await CustomerService.GetCustomerFromIdAsync(UserSession.UserId); // Fetch customer

        if (customer == null)
        {
            Console.WriteLine("User not found.");
            return;
        }

        var room = await RoombookingService.GetRoomByNumber(roomNumber); // Fetch room by number

        if (room == null)
        {
            Console.WriteLine("Room not found.");
            return;
        }

        await RoombookingService.AddRoombookingAsync(customer, room, startDate, (endDate - startDate).Days); // Book room
        await LoadBookings(); // Reload bookings
    }
}


<style>
    .booking-list {
        margin-bottom: 2rem;
    }

    .booking-item {
        margin-bottom: 1rem;
        padding: 1rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: #f9f9f9;
    }

        .booking-item p {
            margin: 0.5rem 0;
        }

    .delete-button {
        background-color: #ff4d4d;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

        .delete-button:hover {
            background-color: #ff0000;
        }

    .booking-form {
        background-color: #f7f7f7;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 2rem;
        max-width: 500px;
        margin: 0 auto;
    }

        .booking-form div {
            margin-bottom: 1rem;
        }

        .booking-form label {
            font-weight: bold;
            margin-bottom: 0.5rem;
            display: block;
        }

        .booking-form input {
            padding: 0.75rem;
            width: 100%;
            border-radius: 4px;
            border: 1px solid #ddd;
        }

        .booking-form button {
            background-color: #5B7553;
            color: white;
            padding: 1rem;
            width: 100%;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.3s ease;
        }

            .booking-form button:hover {
                background-color: #4A5D44;
            }
</style>
